#!/usr/bin/env zsh

# A simple wrapper on the homebrew command to check potential installations
#  and make sure we don't accidentally pull in the homebrew version of software
#  ecosystems which have the potential to mess up outside installations.

local _brew="/usr/local/bin/brew"

if [[ " ${@[*]} " == *" --build-from-source "* ]]; then
  # already committed to building; don't bother with checks
  $_brew $@
  exit
fi
case "$1" in
  instal|install|reinstall|upgrade)
    for pkg in $@
    do
      # skip initial command
      if [[ $pkg == $1 ]]; then
        continue
      fi
      # skip flags
      if [[ $pkg == -* ]]; then
        continue
      fi
      declare -a avoidances=($(cat $HOME/.dotfiles/utility/bad-brew-dependencies.json | jq -r '[.[].brewDeps]|flatten|.[]'))
      local badPak=$(echo $pkg | grep -E "^(${(j:|:)avoidances})$")
      if [[ -n $badPak ]]; then
        echo "Cancelling installation; don't want to install $pkg from Homebrew." | fold -s -w $COLUMNS
        exit 1
      fi
      local badDep=$($_brew deps $pkg 2>/dev/null | grep -E "^(${(j:|:)avoidances})$")
      if [[ -n $badDep ]]; then
        echo "Cancelling installation; package $pkg will pull in Homebrew's ${badDep}, which we don't want." | fold -s -w $COLUMNS
        exit 1
      fi
    done
    $_brew $@
    ;;
  *)
    $_brew $@
    ;;
esac
